{"name": "添加一个宠物", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 25 (char 24)", "trace": "self = <kljpc.tests.test_cases.TestCase object at 0x10e092198>\ncases = {'body': '{\"text\":\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<Pet>\\n <id>1009</id>\\n <Category>\\n  <id>0</id>\\n  <name>s...\\n <photoUrl>\"}', 'bodytype': 'application/xml', 'casename': '添加一个宠物', 'headers': '{\"Accept\":\"application/json\"}', ...}\ntitle = '添加一个宠物'\n\n    @allure.feature('宠物店')\n    @allure.story('宠物管理')\n    @allure.title('{title}')\n    @pytest.mark.parametrize('cases, title', casedata)\n    def test_case001(self, cases, title):\n        # print(len(cases))\n        # cases = cases[3]\n        # print(cases[Case.URL])\n        # print(cases[Case.BODY])\n        client = HttpClient(url=cases[Case.URL], method=cases[Case.METHOD], bodytype=cases[Case.BODYTYPE],\n                            params=cases[Case.PARAMS])\n        client.headers = json.loads(cases[Case.HEADERS])\n>       client.set_body(cases[Case.BODY])\n\ntests/test_cases.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/httpClient.py:48: in set_body\n    body = json.loads(body)\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py:354: in loads\n    return _default_decoder.decode(s)\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x104b1df60>\ns = '{\"text\":\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<Pet>\\n <id>1009</id>\\n <Category>\\n  <id>0</id>\\n  <name>string</name>\\n </Category>\\n <name>doggie</name>\\n <photoUrl>\"}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 25 (char 24)\n\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "cases", "value": "{'module': '宠物管理', 'id': 'pet_add_002', 'casename': '添加一个宠物', 'url': 'https://petstore.swagger.io/v2/pet', 'method': 'post', 'params': '', 'headers': '{\"Accept\":\"application/json\"}', 'body': '{\"text\":\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<Pet>\\n <id>1009</id>\\n <Category>\\n  <id>0</id>\\n  <name>string</name>\\n </Category>\\n <name>doggie</name>\\n <photoUrl>\"}', 'bodytype': 'application/xml', 'status_code': 200.0, 'message': '{\\n  \"id\": 1009,\\n  \"name\": \"doggie\",\\n  \"photoUrls\": [],\\n  \"tags\": [],\\n  \"status\": \"available\"\\n}', 'result': '', 'tester': ''}"}, {"name": "title", "value": "'添加一个宠物'"}], "start": 1615779254770, "stop": 1615779254771, "uuid": "7aa64205-0aec-4edb-8f2b-89d4c4d77c12", "historyId": "6197bcbe87c20035bd88b8038c9de5b2", "testCaseId": "6cc9d4e7adbf321674ee296c226391ca", "fullName": "tests.test_cases.TestCase#test_case001", "labels": [{"name": "story", "value": "宠物管理"}, {"name": "feature", "value": "宠物店"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cases"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "bogon"}, {"name": "thread", "value": "30666-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cases"}]}